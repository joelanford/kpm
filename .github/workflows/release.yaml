name: Release

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for GH releases
    steps:
      - name: Authenticate with GHCR
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set the release related variables
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # Release tags.
            echo IMAGE_TAG="${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
            echo GORELEASER_ARGS="--clean" >> $GITHUB_ENV
            echo ENABLE_RELEASE_PIPELINE=true >> $GITHUB_ENV
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            # 'main' branch build.
            echo IMAGE_TAG="$(echo "${GITHUB_REF#refs/heads/}" | sed -r 's|/+|-|g')" >> $GITHUB_ENV
            echo GORELEASER_ARGS="--clean --skip=validate" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            # PR build.
            echo IMAGE_TAG="pr-$(echo "${GITHUB_REF}" | sed -E 's|refs/pull/([^/]+)/?.*|\1|')" >> $GITHUB_ENV
          else
            echo IMAGE_TAG="$(git describe --tags --always)" >> $GITHUB_ENV
          fi

      - name: Run goreleaser
        run: make release
        env:
          GITHUB_TOKEN: ${{ github.token }}